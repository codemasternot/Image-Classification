name: Run Batch Prediction via FastAPI

on:
  push:
    branches:
      - main
  workflow_dispatch:  # Allows manual trigger of the workflow

jobs:
  batch_predict:
    runs-on: ubuntu-latest

    steps:
    # Step 1: Check out the repository
    - name: Checkout code
      uses: actions/checkout@v2

    # Step 2: Set up Python
    - name: Set up Python 3.8
      uses: actions/setup-python@v2
      with:
        python-version: 3.8

    # Step 3: Install dependencies
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install fastapi uvicorn Pillow google-cloud-storage tensorflow

    # Step 4: Set Google Cloud credentials using a secret
    - name: Set Google Cloud credentials
      run: |
        echo "$GOOGLE_APPLICATION_CREDENTIALS" > /tmp/gcp_key.json
        export GOOGLE_APPLICATION_CREDENTIALS="/tmp/gcp_key.json"
      env:
        GOOGLE_APPLICATION_CREDENTIALS: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}

    # Step 5: Start FastAPI server using Uvicorn in the background
    - name: Start FastAPI server
      run: |
        nohup uvicorn your_file_name:app --host 0.0.0.0 --port 8000 &

    # Step 6: Wait for the FastAPI server to be ready
    - name: Wait for server to start
      run: sleep 15  # Adjust sleep time as necessary to give FastAPI time to start

    # Step 7: Trigger the batch prediction
    - name: Trigger batch prediction from GCS
      run: |
        curl http://localhost:8000/predict-from-gcs-folder

    # Step 8: Clean up (optional)
    - name: Clean up running FastAPI server
      run: |
        kill $(lsof -t -i:8000)
